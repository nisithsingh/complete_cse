// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:

    Mux16(a=feedback, b=in,sel=load,out=readOrwrite);

    DMux4Way16(in=readOrwrite,sel=address[12..13],a=selRam4Ka,b=selRam4Kb,c=selRam4Kc,d=selRam4Kd);
    DMux4Way(in=load,sel=address[12..13],a=ram4Kaloadin,b=ram4Kbloadin,c=ram4Kcloadin,d=ram4Kdloadin);

    RAM4K(in=selRam4Ka,load=ram4Kaloadin,address=address[0..11],out=Ram4Kaout);
    RAM4K(in=selRam4Kb,load=ram4Kbloadin,address=address[0..11],out=Ram4Kbout);
    RAM4K(in=selRam4Kc,load=ram4Kcloadin,address=address[0..11],out=Ram4Kcout);
    RAM4K(in=selRam4Kd,load=ram4Kdloadin,address=address[0..11],out=Ram4Kdout);

    Mux4Way16(a=Ram4Kaout,b=Ram4Kbout,c=Ram4Kcout,d=Ram4Kdout,sel=address[12..13],out=feedback);

    Or16(a=feedback,b=false,out=out);
}