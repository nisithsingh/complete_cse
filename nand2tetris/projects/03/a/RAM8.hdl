// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    Mux16(a=feedback,b=in,sel=load,out=dmuxin);

    DMux8Way16(in=dmuxin,sel=address,a=reg0in,b=reg1in,c=reg2in,d=reg3in,e=reg4in,f=reg5in,g=reg6in,h=reg7in);

    DMux8Way(in=load,sel=address,a=reg0loadin,b=reg1loadin,c=reg2loadin,d=reg3loadin,e=reg4loadin,f=reg5loadin,g=reg6loadin,h=reg7loadin);

    Register(in=reg0in,load=reg0loadin,out=reg0out);
    Register(in=reg1in,load=reg1loadin,out=reg1out);
    Register(in=reg2in,load=reg2loadin,out=reg2out);
    Register(in=reg3in,load=reg3loadin,out=reg3out);
    Register(in=reg4in,load=reg4loadin,out=reg4out);
    Register(in=reg5in,load=reg5loadin,out=reg5out);
    Register(in=reg6in,load=reg6loadin,out=reg6out);
    Register(in=reg7in,load=reg7loadin,out=reg7out);


    Mux8Way16(a=reg0out,b=reg1out,c=reg2out,d=reg3out,e=reg4out,f=reg5out,g=reg6out,h=reg7out,sel=address,out=feedback);

    Or16(a=feedback,b=false,out=out);

}